# /etc/nginx/conf.d/yangshujie.com.conf

# 定义后端服务上游
upstream frontend {
    server 127.0.0.1:3000;
}
upstream backend {
    server 127.0.0.1:8081;
}

# 1) 所有 HTTP 访问 → 301 重定向到 HTTPS
server {
    listen       80;
    listen       [::]:80;
    server_name  yangshujie.com www.yangshujie.com blog.yangshujie.com api.blog.yangshujie.com;
    return 301   https://$host$request_uri;
}

# 2) 前端服务（yangshujie.com, www., blog.）
server {
    listen              443 ssl http2;
    listen              [::]:443 ssl http2;
    server_name         yangshujie.com www.yangshujie.com blog.yangshujie.com;

    # SSL 证书
    ssl_certificate     /etc/nginx/ssl/yangshujie.com.crt;
    ssl_certificate_key /etc/nginx/ssl/yangshujie.com.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_timeout 1d;
    ssl_session_cache   shared:SSL:10m;
    add_header          Strict-Transport-Security "max-age=31536000" always;

    location / {
        proxy_pass         http://frontend;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
}

# 3) 后端 API 服务（api.blog.yangshujie.com）
server {
    listen              443 ssl http2;
    listen              [::]:443 ssl http2;
    server_name         api.blog.yangshujie.com;

    # SSL 证书同上
    ssl_certificate     /etc/nginx/ssl/yangshujie.com.crt;
    ssl_certificate_key /etc/nginx/ssl/yangshujie.com.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_timeout 1d;
    ssl_session_cache   shared:SSL:10m;
    add_header          Strict-Transport-Security "max-age=31536000" always;

    location / {
        proxy_pass         http://backend;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
}
