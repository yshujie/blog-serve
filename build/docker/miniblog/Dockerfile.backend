# build/docker/miniblog/Dockerfile.prod
# ---------- Builder ----------
FROM golang:1.24-alpine AS builder

# 支持构建时通过代理拉取依赖
ARG HTTP_PROXY
ARG HTTPS_PROXY
ENV HTTP_PROXY=${HTTP_PROXY}
ENV HTTPS_PROXY=${HTTPS_PROXY}

# 使用国内 Go proxy，加速模块下载
ENV GOPROXY=https://goproxy.cn,direct

# 安装构建依赖
RUN apk add --no-cache git ca-certificates

WORKDIR /app

# 复制 go.mod/go.sum 并下载依赖
COPY go.mod go.sum ./
RUN go mod download

# 复制全量源码
COPY . .
WORKDIR /app/cmd/miniblog

ENV CGO_ENABLED=0 \
  GOOS=linux \
  GOARCH=amd64

RUN go build -o miniblog .

# ---------- Production ----------
FROM scratch
COPY --from=builder /app/cmd/miniblog/miniblog /usr/local/bin/miniblog
COPY configs/miniblog.yaml /etc/miniblog/config.yaml

USER root
EXPOSE 8081
ENTRYPOINT ["/usr/local/bin/miniblog","--config","/etc/miniblog/config.yaml"]