# ---------- Builder Stage ----------
FROM golang:1.21-alpine AS builder

# 安装构建依赖
RUN apk add --no-cache git ca-certificates

WORKDIR /app

# 复制 go.mod/ go.sum 并下载依赖
COPY go.mod go.sum ./
RUN go mod download

# 复制所有源代码
COPY . .

# 切换到你的 main 包目录
WORKDIR /app/cmd/miniblog

# 设置为静态编译
ENV CGO_ENABLED=0 \
  GOOS=linux \
  GOARCH=amd64

# 编译二进制
RUN go build -o miniblog .



# ---------- Production Stage ----------
FROM scratch

# 从 builder 阶段拷贝可执行文件
COPY --from=builder /app/cmd/miniblog/miniblog /usr/local/bin/miniblog

# 拷贝默认配置文件（可根据需要修改路径）
COPY configs/miniblog.yaml /etc/miniblog/config.yaml

# 如果需要证书（比如https），可以从 builder 带过来：
# COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# 运行所需用户（scratch 无用户，这里直接用 root）
USER root

# 暴露后端监听端口（默认 8081，可根据 miniblog 启动参数修改）
EXPOSE 8081

# 默认执行命令，并指定配置文件位置
ENTRYPOINT ["/usr/local/bin/miniblog", \
  "--config", "/etc/miniblog/config.yaml"]
